#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        window_1 {
            bindings = <&kp LC(LG(RIGHT_ARROW))>;
            key-positions = <9 8>;
        };

        window_2 {
            bindings = <&kp LC(LG(LEFT_ARROW))>;
            key-positions = <18 19>;
        };

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <5 6>;
        };

        vol_down {
            bindings = <&kp C_VOL_DN>;
            key-positions = <15 16>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <27 28>;
        };

        zoom_in {
            bindings = <&kp LC(COLON)>;
            key-positions = <6 7>;
        };

        zoom_out {
            bindings = <&kp LC(MINUS)>;
            key-positions = <16 17>;
        };

        layer8 {
            bindings = <&to 8>;
            key-positions = <6 7 8>;
        };

        layer0 {
            bindings = <&to 0>;
            key-positions = <16 17 18>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E         &kp R                        &kp T                                                           &kp Y        &kp U  &lt 5 I  &kp O            &kp P
&kp A         &kp S         &kp D         &kp F                        &kp G                                                           &kp H        &kp J  &kp K    &kp L            &kp SEMI
&mt LSHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp LC(LG(RIGHT_ARROW))            &lt 6 LEFT_GUI  &kp N        &kp M  &kp N    &kp M            &kp SLASH
&kp LCTRL     &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 7 INT_HENKAN  &lt 1 SPACE  &lt_to_layer_0 3 INT_MUHENKAN      &kp BACKSPACE   &lt 2 ENTER                  &kp RIGHT_SHIFT  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESC    &trans     &trans     &trans     &trans                      &kp F1  &kp F2   &kp F3  &kp F4  &kp F5
&kp LC(A)  &kp LC(S)  &trans     &trans     &trans                      &trans  &kp F13  &kp F6  &kp F7  &kp F8
&kp LC(Z)  &kp LC(Y)  &kp LC(C)  &kp LC(V)  &trans  &trans      &trans  &trans  &trans   &trans  &trans  &trans
&trans     &trans     &trans     &trans     &trans  &trans      &trans  &trans                   &trans  &trans
            >;
        };

        NUM {
            bindings = <
&kp KP_ASTERISK           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LS(ASTERISK)                       &kp LEFT_PARENTHESIS  &kp EXCLAMATION  &kp TILDE         &kp LESS_THAN      &kp GREATER_THAN
&kp COLON                 &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp RIGHT_BRACKET                      &kp BACKSLASH         &kp MINUS        &kp EXCLAMATION   &kp LS(BACKSLASH)  &kp SQT
&mt LEFT_SHIFT LS(MINUS)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACE    &trans      &trans  &kp PIPE              &kp LS(N5)       &kp LS(NUMBER_6)  &kp LS(NUMBER_7)   &mt LEFT_SHIFT LS(INTERNATIONAL_1)
&kp PERIOD                &kp NUMBER_0  &trans        &trans        &trans             &trans      &trans  &trans                                                   &trans             &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)             &trans                                        &trans  &trans  &trans  &trans  &trans
&kp HOME    &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW         &kp END                                       &trans  &trans  &trans  &trans  &trans
&trans      &trans           &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans   &kp LG(LS(RIGHT_ARROW))      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans           &trans          &trans                  &trans   &trans                       &trans  &trans                  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mo 5   &mkp MB2  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &mkp MB4  &mkp MB5
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                    &trans    &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp R               &kp D                &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &kp LA(RIGHT)       &kp LA(LEFT_ARROW)   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LS(LEFT_ARROW)  &kp LS(RIGHT_ARROW)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                           &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans                      &bt BT_NXT    &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &bootloader   &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                    &trans        &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                  &trans  &trans
            >;
        };
    };
};
